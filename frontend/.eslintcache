[{"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\index.js":"1","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\App.js":"2","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\context\\allusers.js":"3","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\styles.js":"4","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\styles\\global.js":"5","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\multiChats\\index.js":"6","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\home\\index.js":"7","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\login\\index.js":"8","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\chat\\index.js":"9","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\configs\\socket_export.js":"10","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\home\\styles.js":"11","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\multiChats\\styles.js":"12","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\login\\styles.js":"13","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\chat\\styles.js":"14","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\configs\\config_connections.js":"15","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\navbar\\index.js":"16","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\modalBorder\\index.js":"17","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\chat\\scripts\\draggable.js":"18","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\home\\components\\header\\index.js":"19","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\chat\\components\\chat\\index.js":"20","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\chat\\components\\header\\index.js":"21","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\chat\\components\\persons\\index.js":"22","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\chat\\components\\chatText\\index.js":"23","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\home\\components\\sidebar\\index.js":"24","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\home\\components\\contacts\\index.js":"25","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\navbar\\styles.js":"26","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\modalBorder\\styles.js":"27","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\home\\components\\header\\styles.js":"28","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\chat\\components\\persons\\styles.js":"29","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\chat\\components\\chat\\styles.js":"30","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\chat\\components\\header\\styles.js":"31","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\chat\\components\\chatText\\styles.js":"32","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\aeroButton\\index.js":"33","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\home\\components\\sidebar\\styles.js":"34","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\home\\components\\contacts\\styles.js":"35","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\home\\components\\contacts\\components\\contact\\index.js":"36","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\aeroButton\\styles.js":"37","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\home\\components\\contacts\\components\\contact\\styles.js":"38","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\modalCropUpdate\\index.js":"39","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\modalCropUpdate\\styles.js":"40","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\modalCropUpdate\\components\\crop\\index.js":"41","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\modalCropUpdate\\components\\crop\\styles.js":"42","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\modalCropUpdate\\components\\photoHistory\\index.js":"43","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\modalCropUpdate\\components\\photoHistory\\styles.js":"44","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\modalBorder\\verifyAvatarDefault.js":"45","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\scripts\\refs.js":"46","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\notificationOnline\\styles.js":"47","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\notificationOnline\\index.js":"48","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\scripts\\sounds\\sounds.js":"49","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\scripts\\winks\\index.js":"50","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\scripts\\winks\\styles.js":"51"},{"size":326,"mtime":1610730218380,"results":"52","hashOfConfig":"53"},{"size":2435,"mtime":1614258304555,"results":"54","hashOfConfig":"53"},{"size":3568,"mtime":1614276163896,"results":"55","hashOfConfig":"53"},{"size":312,"mtime":1610730218430,"results":"56","hashOfConfig":"53"},{"size":267,"mtime":1613661289482,"results":"57","hashOfConfig":"53"},{"size":2279,"mtime":1613663224867,"results":"58","hashOfConfig":"53"},{"size":695,"mtime":1610767896298,"results":"59","hashOfConfig":"53"},{"size":8280,"mtime":1614291709811,"results":"60","hashOfConfig":"53"},{"size":3288,"mtime":1614292028570,"results":"61","hashOfConfig":"53"},{"size":599,"mtime":1610764573054,"results":"62","hashOfConfig":"53"},{"size":509,"mtime":1611272789611,"results":"63","hashOfConfig":"53"},{"size":800,"mtime":1613661586512,"results":"64","hashOfConfig":"53"},{"size":3613,"mtime":1614275077824,"results":"65","hashOfConfig":"53"},{"size":3332,"mtime":1613660820896,"results":"66","hashOfConfig":"53"},{"size":206,"mtime":1614630455805,"results":"67","hashOfConfig":"53"},{"size":387,"mtime":1610730218402,"results":"68","hashOfConfig":"53"},{"size":1562,"mtime":1611282179637,"results":"69","hashOfConfig":"53"},{"size":2615,"mtime":1614626616681,"results":"70","hashOfConfig":"53"},{"size":7579,"mtime":1614277487459,"results":"71","hashOfConfig":"53"},{"size":2587,"mtime":1612201665610,"results":"72","hashOfConfig":"53"},{"size":3351,"mtime":1614259132637,"results":"73","hashOfConfig":"53"},{"size":1153,"mtime":1613651120262,"results":"74","hashOfConfig":"53"},{"size":1278,"mtime":1611281822802,"results":"75","hashOfConfig":"53"},{"size":1245,"mtime":1611269339793,"results":"76","hashOfConfig":"53"},{"size":2511,"mtime":1614270732347,"results":"77","hashOfConfig":"53"},{"size":185,"mtime":1610730218402,"results":"78","hashOfConfig":"53"},{"size":940,"mtime":1610767896291,"results":"79","hashOfConfig":"53"},{"size":7380,"mtime":1614289638781,"results":"80","hashOfConfig":"53"},{"size":1235,"mtime":1613651716576,"results":"81","hashOfConfig":"53"},{"size":1743,"mtime":1612230755217,"results":"82","hashOfConfig":"53"},{"size":995,"mtime":1614258736360,"results":"83","hashOfConfig":"53"},{"size":738,"mtime":1612227294951,"results":"84","hashOfConfig":"53"},{"size":367,"mtime":1614208519784,"results":"85","hashOfConfig":"53"},{"size":1110,"mtime":1611269117078,"results":"86","hashOfConfig":"53"},{"size":1699,"mtime":1610767896296,"results":"87","hashOfConfig":"53"},{"size":2637,"mtime":1614270867036,"results":"88","hashOfConfig":"53"},{"size":730,"mtime":1611281122011,"results":"89","hashOfConfig":"53"},{"size":735,"mtime":1614258687715,"results":"90","hashOfConfig":"53"},{"size":1345,"mtime":1611585910979,"results":"91","hashOfConfig":"53"},{"size":1029,"mtime":1612143384606,"results":"92","hashOfConfig":"53"},{"size":6288,"mtime":1614270076786,"results":"93","hashOfConfig":"53"},{"size":2510,"mtime":1610772584616,"results":"94","hashOfConfig":"53"},{"size":3759,"mtime":1614269924455,"results":"95","hashOfConfig":"53"},{"size":2646,"mtime":1612143434007,"results":"96","hashOfConfig":"53"},{"size":4965,"mtime":1612146089043,"results":"97","hashOfConfig":"53"},{"size":5833,"mtime":1614630331953,"results":"98","hashOfConfig":"53"},{"size":1983,"mtime":1612313168930,"results":"99","hashOfConfig":"53"},{"size":4621,"mtime":1614270591832,"results":"100","hashOfConfig":"53"},{"size":480,"mtime":1612137465684,"results":"101","hashOfConfig":"53"},{"size":1467,"mtime":1612305647839,"results":"102","hashOfConfig":"53"},{"size":551,"mtime":1612304877062,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"b84bwa",{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"106"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"106"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"106"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"106"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"106"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"106"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"106"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"106"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"106"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"106"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"106"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\index.js",[],["221","222"],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\App.js",["223","224","225"],"import React, { useEffect, useRef } from \"react\";\r\nimport { Container } from \"./styles\";\r\nimport GlobalStyle from \"./styles/global\";\r\n\r\n//components\r\nimport MultiChats from \"../src/pages/multiChats/index\";\r\nimport { NotificationOnline } from \"./pages/components/notificationOnline/index\";\r\n\r\n//pages\r\nimport Home from \"./pages/home/index\";\r\nimport Chat from \"./pages/chat/index\";\r\nimport Login from \"./pages/login/index\";\r\n\r\n//context\r\nimport { useUser } from \"./pages/context/allusers\";\r\nimport { socket } from \"./configs/socket_export\";\r\n\r\n//refs\r\nimport { sendmessage, drawAttention } from \"./scripts/refs\";\r\n\r\n//configs\r\nimport { config } from \"./configs/config_connections\";\r\nconst configs = config();\r\n\r\nfunction App() {\r\n    const { userChats, mode, chatRefText, chatRef, multiChatRef } = useUser();\r\n\r\n    useEffect(() => {\r\n        socket.on(\"send client message text\", ({ message, socketidUser, socketidPerson, chatopen, usernamesend }) => {\r\n            sendmessage({ chatRefText, chatRef, multiChatRef, message, socketidUser, socketidPerson, chatopen, usernamesend });\r\n        });\r\n\r\n        socket.on(\"Draw AttenAttention\", ({ id, whosend, isend, statusperson }) => {\r\n            drawAttention({ chatRefText, chatRef, multiChatRef, id, whosend, isend, statusperson });\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <Container>\r\n            <NotificationOnline />\r\n\r\n            {mode === \"login\" ? (\r\n                <Login />\r\n            ) : (\r\n                <>\r\n                    <Home />\r\n\r\n                    {userChats && userChats.map((elem, index) => <Chat key={elem.socketidperson} chatRefText={chatRefText} ref={{ chatRefText: (el) => (chatRefText.current[index] = el), chatRef: (el) => (chatRef.current[index] = el) }} socketidperson={elem.socketidperson} visible={elem.visible} />)}\r\n\r\n                    <div id=\"multi-chats\">\r\n                        {userChats &&\r\n                            userChats.map((elem, index) => (\r\n                                <MultiChats key={elem.socketidperson} chatRefProps={{ chatRefText: (el) => (chatRefText.current[index] = el), chatRef: (el) => (chatRef.current[index] = el) }} ref={(el) => (multiChatRef.current[index] = el)} socketidperson={elem.socketidperson} />\r\n                            ))}\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <GlobalStyle />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\context\\allusers.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\styles.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\styles\\global.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\multiChats\\index.js",["226"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\n//images\r\nimport balloon from \"./assets/balloon.ico\";\r\n\r\n//context\r\nimport { useUser } from \"../../pages/context/allusers\";\r\n\r\n//configs\r\nimport { socket } from \"../../configs/socket_export\";\r\n\r\nconst MultiChats = React.forwardRef((props, ref) => {\r\n    const { getPerson, chatRef, chatRefText } = useUser();\r\n\r\n    const [contact, setContact] = useState();\r\n    const [username, setUsername] = useState();\r\n\r\n    useEffect(() => {\r\n        setContact(getPerson(props.socketidperson));\r\n\r\n        if (contact) {\r\n            setUsername(contact.username);\r\n        }\r\n    });\r\n\r\n    const openchat = (socketidperson) => {\r\n        const indexPersonChat = chatRefText.current.findIndex((elem) => elem.id === socketidperson);\r\n\r\n        socket.emit(\"change visible chat\", socketidperson);\r\n        const elemento = document.getElementById(`${props.socketidperson}-multichat`);\r\n        elemento.style = \"background-color: white;\";\r\n\r\n        const inputDOMNode = chatRef.current[indexPersonChat];\r\n        inputDOMNode.parentNode.appendChild(inputDOMNode); // faz puxar para frente ao clicar para abrir\r\n    };\r\n\r\n    const changeColorOnHover = (mode) => {\r\n        const elemento = document.getElementById(`${props.socketidperson}-multichat`);\r\n\r\n        if (mode === \"over\") elemento.style = `background-color: gainsboro`;\r\n        if (mode === \"out\") elemento.style = `background-color: white`;\r\n    };\r\n\r\n    return (\r\n        <Container onClick={() => openchat(props.socketidperson)} ref={ref} id={`${props.socketidperson}-multichat`} onMouseOver={() => changeColorOnHover(\"over\")} onMouseOut={() => changeColorOnHover(\"out\")}>\r\n            <img id=\"image-balloon-multichats\" src={balloon} alt=\"\" />\r\n            {contact ? (\r\n                <p>{contact.username}</p>\r\n            ) : (\r\n                <>\r\n                    <p id=\"user-status-offline\" style={{ color: \"black\", textDecoration: \"line-through\" }}>\r\n                        {username}\r\n                    </p>\r\n                    <p style={{ color: \"red\", marginLeft: 5, fontWeight: \"bold\" }}>(Offline)</p>\r\n                </>\r\n            )}\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default MultiChats;\r\n","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\home\\index.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\login\\index.js",["227","228","229","230","231"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport ReactLoading from \"react-loading\";\r\n\r\nimport { Main, Container } from \"./styles\";\r\n\r\n//components\r\nimport Navbar from \"../components/navbar/index\";\r\nimport Borderavatar from \"../components/modalBorder/index\";\r\nimport ModalCropUpdate from \"../components/modalCropUpdate\";\r\n\r\n//icons\r\nimport { BsPencil, BsTrash } from \"react-icons/bs\";\r\n\r\n//images\r\nimport brasil from \"./assets/brazil.svg\";\r\nimport usa from \"./assets/united-states.svg\";\r\n\r\n//gif\r\nimport loading from \"./assets/loading.gif\";\r\n\r\n//configs\r\nimport { socket } from \"../../configs/socket_export\";\r\n\r\n//context\r\nimport { useUser } from \"../context/allusers\";\r\n\r\nconst Login = () => {\r\n    const { register, handleSubmit } = useForm();\r\n\r\n    const { getUser, setMode, language, changeLanguage } = useUser();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [person, setPerson] = useState();\r\n    const [gifLogin, setGifLogin] = useState(false);\r\n\r\n    const [changeStatusBorder, setChangeStatusBorder] = useState();\r\n    const rememberIsChecked = useRef();\r\n    const autoLoginIsChecked = useRef();\r\n\r\n    const sendSocketEmitStatus = (status) => {\r\n        socket.emit(\"change status user\", status);\r\n    };\r\n\r\n    const sendSocketEmitUsername = (username) => {\r\n        socket.emit(\"change username user\", username);\r\n    };\r\n\r\n    const onSubmit = (data) => {\r\n        setGifLogin(true);\r\n        setTimeout(() => {\r\n            if (!data.username || data.username === \" \" || data.username === \"\") {\r\n                alert(language === \"br\" ? \"Você deve colocar o seu nome de usuário.\" : \"You must enter your username.\");\r\n                setGifLogin(false);\r\n                return false;\r\n            }\r\n\r\n            data.socketid = socket.id;\r\n            if (rememberIsChecked) data.remember = rememberIsChecked.current.checked;\r\n            if (autoLoginIsChecked) data.autologin = autoLoginIsChecked.current.checked;\r\n\r\n            sendSocketEmitStatus(data.status); // troca status ao entrar.\r\n            sendSocketEmitUsername(data.username); // troca username ao entrar\r\n\r\n            //se o input estiver selecionado, irá as informações.\r\n            if (data.remember) {\r\n                localStorage.setItem(\"saveUser\", JSON.stringify({ username: data.username, avatar: person.avatar, autologin: autoLoginIsChecked.current.checked }));\r\n            } else {\r\n                //caso nao esteja ele irá remover.\r\n                localStorage.removeItem(\"saveUser\");\r\n            }\r\n\r\n            if (JSON.parse(localStorage.getItem(\"saveUser\"))) {\r\n                let avatar = JSON.parse(localStorage.getItem(\"saveUser\")).avatar; // pega o avatar que esta em local storage\r\n                if (changeStatusBorder != \"invisible\") {\r\n                    socket.emit(\"socket connected notification\", { avatar }); // faz um emit pro serivdor\r\n                }\r\n            } else {\r\n                if (changeStatusBorder != \"invisible\") {\r\n                    socket.emit(\"socket connected notification\", { avatar: person.avatar }); // faz um emit pro serivdor\r\n                }\r\n            }\r\n\r\n            setMode(\"home\"); //muda para home depois que clica.\r\n        }, 2000);\r\n    };\r\n\r\n    const handleChangeUsername = (e) => {\r\n        //muda o state de username\r\n        setUsername(e.target.value);\r\n    };\r\n\r\n    const handleVerifyRememberInput = () => {\r\n        //Função onde verifica se o input de lembrar está ativo, se sim ele deixar clicar para entrar automaticamente.\r\n        if (rememberIsChecked.current.checked) {\r\n            autoLoginIsChecked.current.disabled = false;\r\n        } else {\r\n            autoLoginIsChecked.current.disabled = true;\r\n            autoLoginIsChecked.current.checked = false;\r\n        }\r\n    };\r\n\r\n    const clearSaveUser = () => {\r\n        localStorage.removeItem(\"saveUser\");\r\n        setUsername(\"\");\r\n        socket.emit(\"change avatar\", \"\");\r\n        alert(language === \"br\" ? \"Informações limpas\" : \"Information deleted.\");\r\n    };\r\n\r\n    (async function () {\r\n        setPerson(await getUser(socket.id));\r\n    })();\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"saveUser\")) {\r\n            let infos = JSON.parse(localStorage.getItem(\"saveUser\"));\r\n            setUsername(infos.username);\r\n            socket.emit(\"change avatar\", infos.avatar);\r\n            rememberIsChecked.current.checked = true;\r\n            autoLoginIsChecked.current.disabled = false;\r\n        }\r\n        if (localStorage.getItem(\"msn-language\")) {\r\n            changeLanguage(localStorage.getItem(\"msn-language\"));\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Main>\r\n            <Navbar />\r\n            <Container>\r\n                {person ? <Borderavatar avatar={person.avatar} size=\"96\" status={changeStatusBorder} minus=\"22\" top=\"4px\" left=\"3px\"></Borderavatar> : <ReactLoading type=\"spin\" color=\"black\" height={100} width={100} />}\r\n\r\n                <ModalCropUpdate className=\"change-photo-button\">\r\n                    <BsPencil size={15} color=\"black\" />\r\n                </ModalCropUpdate>\r\n                <div id=\"div-country-flag\">\r\n                    <img onClick={() => changeLanguage(\"br\")} className=\"country-flag\" src={brasil} />\r\n                    <img onClick={() => changeLanguage(\"en\")} className=\"country-flag\" src={usa} />\r\n                </div>\r\n\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"div-input-login\">\r\n                        <p>{language === \"br\" ? \"Nome de usuario:\" : \"Username:\"}</p>\r\n                        <input id=\"login-input-email\" ref={register} name=\"username\" type=\"text\" value={username} onChange={handleChangeUsername} />\r\n                    </div>\r\n\r\n                    <div id=\"login-status\">\r\n                        <p>{language === \"br\" ? \"Entrar como:\" : \"Sign in as:\"}</p>\r\n                        <select ref={register} name=\"status\" onChange={(e) => setChangeStatusBorder(e.target.value)}>\r\n                            <option value=\"online\">{language === \"br\" ? \"Online (Padrão)\" : \"Online (Default)\"}</option>\r\n                            <option value=\"busy\">{language === \"br\" ? \"Ocupado\" : \"Busy\"}</option>\r\n                            <option value=\"away\">{language === \"br\" ? \"Ausente\" : \"Away\"}</option>\r\n                            <option value=\"invisible\">Offline</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"checkbox-buttons-login\">\r\n                        <input type=\"checkbox\" ref={rememberIsChecked} onChange={handleVerifyRememberInput}></input>\r\n                        <p>{language === \"br\" ? \"Lembrar-me\" : \"Remember-me\"}</p>\r\n                        <button type=\"button\" onClick={clearSaveUser}>\r\n                            <BsTrash />\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"checkbox-buttons-login\">\r\n                        <input disabled type=\"checkbox\" ref={autoLoginIsChecked}></input>\r\n                        <p>{language === \"br\" ? \"Entrar Automaticamente\" : \"Sign me in automatically\"}</p>\r\n                    </div>\r\n                    <div id=\"footer-buttons\">\r\n                        {person ? (\r\n                            <button type=\"submit\">{language === \"br\" ? \"Entrar\" : \"Sign in\"}</button>\r\n                        ) : (\r\n                            <button\r\n                                type=\"button\"\r\n                                onClick={() => {\r\n                                    alert(language === \"br\" ? \"Não foi possivel conectar ao servidor, tente novamente!\" : \"Unable to connect to the server, try again!\");\r\n                                }}\r\n                            >\r\n                                {language === \"br\" ? \"Entrar\" : \"Sign in\"}\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </form>\r\n                {gifLogin && (\r\n                    <div>\r\n                        <img src={loading} alt=\"\" />\r\n                    </div>\r\n                )}\r\n            </Container>\r\n        </Main>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\chat\\index.js",["232","233","234"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\n//componenets\r\nimport Header from \"./components/header/index\";\r\nimport ChatText from \"./components/chatText/index\";\r\nimport Chat from \"./components/chat/index\";\r\nimport Persons from \"./components/persons/index\";\r\n\r\n//icons\r\nimport { VscChromeMinimize, VscChromeClose } from \"react-icons/vsc\";\r\n\r\n//configs\r\nimport { socket } from \"../../configs/socket_export\";\r\n\r\n//context\r\nimport { useUser } from \"../context/allusers\";\r\n\r\n//scripts\r\nimport draggable from \"./scripts/draggable\";\r\n\r\nconst ChatUser = React.forwardRef((props, ref) => {\r\n    const { chatRefText, chatRef } = ref;\r\n\r\n    const { getPerson } = useUser();\r\n\r\n    const [person, setPerson] = useState({});\r\n    const [oldPerson, setOldPerson] = useState({});\r\n    const [user, setUser] = useState({});\r\n\r\n    const x = window.innerWidth;\r\n\r\n    const MinimizeChat = (socketidperson) => {\r\n        socket.emit(\"change visible chat\", socketidperson);\r\n    };\r\n\r\n    const closeChat = (socketidperson) => {\r\n        socket.emit(\"close chat\", socketidperson);\r\n    };\r\n\r\n    useEffect(() => {\r\n        draggable(props.chatRefText, props.socketidperson);\r\n        (async function () {\r\n            setPerson(await getPerson(props.socketidperson)); //Verifica o person atraves do socketidperson passado por props, pegando o objeto do backend\r\n            setUser(await getPerson(socket.id)); //Verifica o person atraves do socketidperson passado por props, pegando o objeto do backend\r\n            if (person) {\r\n                setOldPerson(person);\r\n            }\r\n        })();\r\n    }, [getPerson(props.socketidperson), getPerson(socket.id)]);\r\n\r\n    return (\r\n        <Container className={x < 600 ? \"\" : \"draggable-chat\"} visible={props.visible} ref={chatRef}>\r\n            <div id=\"header-chat-top\">\r\n                <button className=\"header-chat-top-buttons\" onClick={() => MinimizeChat(props.socketidperson)}>\r\n                    <VscChromeMinimize />\r\n                </button>\r\n                <button className=\"header-chat-top-buttons\" onClick={() => closeChat(props.socketidperson)}>\r\n                    <VscChromeClose color=\"red\" />\r\n                </button>\r\n                {props.children}\r\n            </div>\r\n            <div id=\"chat-top\">\r\n                <Header username={person ? person.username : `${oldPerson.username}`} subnick={person ? person.subnick : `${oldPerson.subnick}`} status={person ? person.status : \"invisible\"} />\r\n            </div>\r\n            <div id=\"chat-conversation\">\r\n                <div id=\"chat-conversation-left\">\r\n                    <ChatText socketidUser={socket.id} socketidperson={props.socketidperson} ref={chatRefText} status={person ? person.status : \"invisible\"} />\r\n                    <Chat socketidUser={socket.id} socketidPerson={props.socketidperson} />\r\n                </div>\r\n                <div id=\"chat-conversation-right\">\r\n                    <Persons statusUser={user ? user.status : \"invisible\"} statusPerson={person ? person.status : \"invisible\"} avatarperson={person ? person.avatar : oldPerson.avatar} avataruser={user ? user.avatar : \"\"} />\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default ChatUser;\r\n","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\configs\\socket_export.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\home\\styles.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\multiChats\\styles.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\login\\styles.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\chat\\styles.js",["235"],"import { BiBluetooth } from \"react-icons/bi\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    height: 85vh;\r\n    min-height: 450px;\r\n    width: 95vw;\r\n\r\n    @media (min-width: 600px) {\r\n        height: 80vh;\r\n        min-height: 450px;\r\n        width: 850px;\r\n        min-width: 580px;\r\n    }\r\n\r\n    border: 1px solid;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border: 1px solid gray;\r\n    position: absolute;\r\n    border-radius: 5px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    margin-top: auto;\r\n    margin-bottom: auto;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    overflow: hidden;\r\n\r\n    /* Animations component */\r\n\r\n    @keyframes shake {\r\n        0% {\r\n            transform: translate(1px, 1px) rotate(0deg);\r\n        }\r\n        10% {\r\n            transform: translate(-1px, -2px) rotate(-3deg);\r\n        }\r\n        20% {\r\n            transform: translate(-3px, 0px) rotate(3deg);\r\n        }\r\n        30% {\r\n            transform: translate(3px, 2px) rotate(0deg);\r\n        }\r\n        40% {\r\n            transform: translate(1px, -1px) rotate(3deg);\r\n        }\r\n        50% {\r\n            transform: translate(-1px, 2px) rotate(-3deg);\r\n        }\r\n        60% {\r\n            transform: translate(-3px, 1px) rotate(0deg);\r\n        }\r\n        70% {\r\n            transform: translate(3px, 1px) rotate(-3deg);\r\n        }\r\n        80% {\r\n            transform: translate(-1px, -1px) rotate(3deg);\r\n        }\r\n        90% {\r\n            transform: translate(1px, 2px) rotate(0deg);\r\n        }\r\n        100% {\r\n            transform: translate(1px, -2px) rotate(-3deg);\r\n        }\r\n    }\r\n\r\n    z-index: ${(props) => {\r\n        if (props.visible === true) {\r\n            return 0;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }};\r\n    #header-chat-top {\r\n        height: 30px;\r\n        min-height: 30px;\r\n        display: flex;\r\n        overflow: auto;\r\n        padding-top: 2px;\r\n        background-color: rgb(205, 240, 246);\r\n        border-radius: 5px 5px 0px 0px;\r\n        padding: 3px;\r\n        justify-content: flex-end;\r\n\r\n        .header-chat-top-buttons {\r\n            background: white;\r\n            padding: 0px 7px 0px;\r\n            border: 1px solid gray;\r\n            margin-right: 10px;\r\n            border-radius: 4px;\r\n            cursor: pointer;\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n        }\r\n    }\r\n\r\n    #chat-top {\r\n        height: 80px;\r\n        padding-bottom: 4px;\r\n        background-color: rgb(236, 246, 249);\r\n    }\r\n\r\n    #chat-conversation {\r\n        height: 100%;\r\n        background-color: rgb(236, 246, 249);\r\n        display: flex;\r\n        max-height: 85.7%;\r\n        position: relative;\r\n        padding-bottom: 10px;\r\n        padding: 10px;\r\n\r\n        #chat-conversation-left {\r\n            width: 78%;\r\n            display: flex;\r\n            flex-direction: column;\r\n            padding: 5px;\r\n        }\r\n        #chat-conversation-right {\r\n            padding-top: 10px;\r\n\r\n            @media (max-width: 600px) {\r\n                width: 42%;\r\n                min-width: 42%;\r\n            }\r\n\r\n            @media (min-width: 600px) {\r\n                width: 22%;\r\n                max-width: 22%;\r\n            }\r\n        }\r\n    }\r\n`;\r\n","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\configs\\config_connections.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\navbar\\index.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\modalBorder\\index.js",["236"],"import React from \"react\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\n//images\r\n\r\nimport avatarDefault from \"./assets/avatar-default.png\";\r\n\r\nimport invisible from \"./assets/invisible.png\";\r\nimport online from \"./assets/online.png\";\r\nimport away from \"./assets/away.png\";\r\nimport busy from \"./assets/busy.png\";\r\n\r\n//scripts\r\nimport { verifyAvatarDefault } from \"./verifyAvatarDefault.js\";\r\n\r\nconst ModalBorder = (props) => {\r\n    let size;\r\n\r\n    switch (props.size) {\r\n        case \"32\":\r\n            size = 70;\r\n            break;\r\n        case \"64\":\r\n            size = 100;\r\n            break;\r\n        case \"96\":\r\n            size = 120;\r\n            break;\r\n        default:\r\n            size = props.size;\r\n    }\r\n\r\n    let status;\r\n\r\n    switch (props.status) {\r\n        case \"online\":\r\n            status = online;\r\n            break;\r\n        case \"busy\":\r\n            status = busy;\r\n            break;\r\n        case \"away\":\r\n            status = away;\r\n            break;\r\n        default:\r\n            status = invisible;\r\n    }\r\n\r\n    let avatar = verifyAvatarDefault(props.avatar);\r\n\r\n    return (\r\n        <Container size={size} top={props.top} left={props.left} minus={props.minus}>\r\n            <div id=\"modal-border-avatar-div\">\r\n                <img id=\"modal-border-avatar-frame\" src={status} alt=\"\" />\r\n                <div id=\"frame-div-avatar\">\r\n                    <img id=\"modal-border-avatar-picture\" src={avatar} alt=\"\" />\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ModalBorder;\r\n","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\chat\\scripts\\draggable.js",["237","238","239"],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\home\\components\\header\\index.js",["240"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Profile, Navbar } from \"./styles\";\r\n\r\n//images navbar\r\nimport navbarNews from \"./assets/navbar/navbar-news.png\";\r\nimport navbarColors from \"./assets/navbar/navbar-colors.png\";\r\nimport navbarMail from \"./assets/navbar/navbar-mail.png\";\r\nimport navbarContacts from \"./assets/navbar/navbar-contacts.png\";\r\n\r\n//images\r\nimport brasil from \"./assets/brazil.svg\";\r\nimport usa from \"./assets/united-states.svg\";\r\n\r\n//tooltip\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\n//icons\r\nimport { BsPencil } from \"react-icons/bs\";\r\nimport { FaSpotify } from \"react-icons/fa\";\r\nimport { BsMusicNoteBeamed } from \"react-icons/bs\";\r\n\r\n//components\r\nimport AeroButton from \"../../../components/aeroButton/index\";\r\nimport Borderavatar from \"../../../components/modalBorder/index\";\r\nimport NavBar from \"../../../components/navbar/index\";\r\nimport ModalCropUpdate from \"../../../components/modalCropUpdate\";\r\n\r\nimport Crop from \"../../../components/modalCropUpdate/components/crop/index\";\r\n\r\n//socket\r\nimport { socket } from \"../../../../configs/socket_export\";\r\n\r\n//context\r\nimport { useUser } from \"../../../context/allusers\";\r\n\r\n//configs\r\nimport { config } from \"../../../../configs/config_connections\";\r\n\r\nconst configs = config();\r\n\r\nconst Header = () => {\r\n    const { getUser, theme, changeTheme, language, changeLanguage } = useUser();\r\n    const [person, setPerson] = useState();\r\n\r\n    const handleChangeStatus = async (e) => {\r\n        if (e.target.value === \"online\") {\r\n            if (JSON.parse(localStorage.getItem(\"saveUser\"))) {\r\n                let avatar = JSON.parse(localStorage.getItem(\"saveUser\")).avatar; // pega o avatar que esta em local storage\r\n                socket.emit(\"socket connected notification\", { avatar }); // faz um emit pro serivdor\r\n            } else {\r\n                socket.emit(\"socket connected notification\", { avatar: person.avatar }); // faz um emit pro serivdor\r\n            }\r\n        }\r\n        socket.emit(\"change status user\", e.target.value);\r\n    };\r\n\r\n    const sendSubnick = (event) => {\r\n        event.preventDefault();\r\n        const input = document.getElementById(\"myInput-subnick\");\r\n        input.blur();\r\n        socket.emit(\"change subnick user\", input.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        socket.on(\"return subnick user\", (data) => {\r\n            const input = document.getElementById(\"myInput-subnick\");\r\n            input.value = data;\r\n        });\r\n\r\n        (async function () {\r\n            setPerson(await getUser(socket.id));\r\n        })();\r\n    });\r\n\r\n    const menuSubnick = async () => {\r\n        const child = window.open(`http://${configs.ipServer}/routes/spotify/login?socketid=${socket.id}`, \"_blank\", \"location=yes,height=570,width=520,scrollbars=yes,status=yes\");\r\n\r\n        // setTimeout(() => {\r\n        //     child.close();\r\n        //     alert(\"Spotify Conectado\");\r\n        // }, 1000);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ReactTooltip multiline=\"true\" />\r\n            <Profile color={theme}>\r\n                <NavBar />\r\n                <div id=\"profile\">\r\n                    <div id=\"left\">\r\n                        {person ? <Borderavatar avatar={person.avatar} size=\"64\" status={person.status} minus=\"19\" top=\"2px\" left=\"2px\"></Borderavatar> : <Borderavatar avatar=\"\" size=\"64\" status=\"online\" minus=\"19\" top=\"2px\" left=\"2px\"></Borderavatar>}\r\n                        <button id=\"btn-edit-photo-shadow\">\r\n                            <BsPencil size={20} color=\"white\" />\r\n                        </button>\r\n                        <ModalCropUpdate id=\"btn-edit-photo\">\r\n                            <button id=\"btn-edit-photo\" onClick={() => <Crop />}>\r\n                                <BsPencil size={20} color=\"#454545\" />\r\n                            </button>\r\n                        </ModalCropUpdate>\r\n                    </div>\r\n                    <div id=\"right\">\r\n                        <span className=\"span-username\">\r\n                            <div>\r\n                                {person ? <p id=\"username\">{person.username}</p> : <p id=\"username\">Não informado</p>}\r\n\r\n                                <small>\r\n                                    <select onChange={(e) => handleChangeStatus(e)}>\r\n                                        <option value=\"\" disabled selected>\r\n                                            {language === \"br\" ? \"(Mude seu status)\" : \"(Change your status)\"}\r\n                                        </option>\r\n                                        <option value=\"online\">(Online)</option>\r\n                                        <option value=\"busy\">{language === \"br\" ? \"(Ocupado)\" : \"(Busy)\"}</option>\r\n                                        <option value=\"away\">{language === \"br\" ? \"(Ausente)\" : \"(Away)\"}</option>\r\n                                        <option value=\"invisible\">(Offline)</option>\r\n                                    </select>\r\n                                </small>\r\n                            </div>\r\n                            <div>\r\n                                <img onClick={() => changeLanguage(\"br\")} className=\"country-flag\" src={brasil} alt=\"\" />\r\n                                <img onClick={() => changeLanguage(\"en\")} className=\"country-flag\" src={usa} alt=\"\" />\r\n                            </div>\r\n                        </span>\r\n\r\n                        <div id=\"div-subnick\">\r\n                            <AeroButton datatip={language === \"br\" ? \"Clique para inserir a musica<br /> que está ouvindo agora no spotify.\" : \"Click to insert the song <br /> you are listening to now on spotify.\"} onCustomClick={() => menuSubnick()}>\r\n                                <FaSpotify size=\"20\" color=\"white\" />\r\n                                <p style={{ color: \"white\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                                    {language === \"br\" ? \"Conectar\" : \"Connect\"}\r\n                                    <BsMusicNoteBeamed size={15} style={{ marginLeft: 5 }} />\r\n                                </p>\r\n                            </AeroButton>\r\n                            <AeroButton id=\"sub-nick\">\r\n                                <form onSubmit={(e) => sendSubnick(e)}>\r\n                                    <input placeholder={language === \"br\" ? \"Insira seu subnick aqui\" : \"Insert your subnick here\"} type=\"text\" id=\"myInput-subnick\" onBlur={(e) => sendSubnick(e)}></input>\r\n                                </form>\r\n                            </AeroButton>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Profile>\r\n            <Navbar color={theme}>\r\n                <div id=\"left\">\r\n                    <AeroButton className=\"button\" disabled={true}>\r\n                        <img src={navbarMail} alt=\"\" />\r\n                    </AeroButton>\r\n                    <AeroButton className=\"button\" disabled={true}>\r\n                        <img src={navbarContacts} alt=\"\" />\r\n                    </AeroButton>\r\n                    <AeroButton className=\"button\" disabled={true}>\r\n                        <img src={navbarNews} alt=\"\" />\r\n                    </AeroButton>\r\n                </div>\r\n                <div id=\"right\">\r\n                    <AeroButton className=\"button\" onCustomClick={() => changeTheme()}>\r\n                        <img src={navbarColors} alt=\"\" />\r\n                    </AeroButton>\r\n                </div>\r\n            </Navbar>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\chat\\components\\chat\\index.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\chat\\components\\header\\index.js",["241","242","243","244","245","246","247"],"import React from \"react\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\n//images\r\nimport balloon from \"./assets/balloon.ico\";\r\nimport invite from \"./assets/invite.png\";\r\nimport folder from \"./assets/folder.png\";\r\nimport phone from \"./assets/phone.png\";\r\nimport music from \"./assets/music.png\";\r\nimport games from \"./assets/games.png\";\r\nimport block from \"./assets/block.png\";\r\nimport listen from \"./assets/listen-music.png\";\r\n\r\n//components\r\nimport AeroButton from \"../../../components/aeroButton/index\";\r\n\r\nconst Header = (props) => {\r\n    let statusName;\r\n    switch (props.status) {\r\n        case \"online\":\r\n            statusName = \"Online\";\r\n            break;\r\n        case \"away\":\r\n            statusName = \"Ausente\";\r\n            break;\r\n        case \"busy\":\r\n            statusName = \"Ocupado\";\r\n            break;\r\n        case \"invisible\":\r\n            statusName = \"Offline\";\r\n            break;\r\n        default:\r\n            statusName = \"\";\r\n    }\r\n    return (\r\n        <Container>\r\n            <div id=\"div-username-subnick-chat\">\r\n                <div id=\"div-username\">\r\n                    <img src={balloon} alt=\"\" />\r\n                    <p id=\"username\">{props.username && `${props.username} - ${statusName}`}</p>\r\n                </div>\r\n                {/* <div id=\"div-subnick\">{props.subnick && <p id=\"subnick-header\">{props.subnick}</p>}</div> */}\r\n                <div id=\"div-subnick\">\r\n                    {props.music ? (\r\n                        props.music.name ? (\r\n                            <>\r\n                                <img src={listen} alt=\"\" style={{ marginRight: 10, width: 15 }} />\r\n                                <a id=\"contact-music\" href={props.music.url} target=\"_blank\" style={{ fontSize: 2, color: \"blue\" }}>\r\n                                    {props.music.name} ({props.music.author})\r\n                                </a>\r\n                            </>\r\n                        ) : (\r\n                            <p id=\"contact-subnick\"></p>\r\n                        )\r\n                    ) : props.subnick ? (\r\n                        <p id=\"subnick-header\">{props.subnick}</p>\r\n                    ) : (\r\n                        <p id=\"subnick-header\"></p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div id=\"div-chat-menu-header\">\r\n                <div id=\"left\">\r\n                    <AeroButton disabled={true}>\r\n                        <img src={invite} alt=\"image\"></img>\r\n                    </AeroButton>\r\n                    <AeroButton disabled={true}>\r\n                        <img src={folder} alt=\"image\"></img>\r\n                    </AeroButton>\r\n                    <AeroButton disabled={true}>\r\n                        <img src={phone} alt=\"image\"></img>\r\n                    </AeroButton>\r\n                    <AeroButton disabled={true}>\r\n                        <img src={music} alt=\"image\"></img>\r\n                    </AeroButton>\r\n                    <AeroButton disabled={true}>\r\n                        <img src={games} alt=\"image\"></img>\r\n                    </AeroButton>\r\n                    <AeroButton disabled={true}>\r\n                        <img src={block} alt=\"image\"></img>\r\n                    </AeroButton>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\chat\\components\\persons\\index.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\chat\\components\\chatText\\index.js",["248","249","250"],"import React, { useEffect } from \"react\";\r\nimport { Container, MessageStatus } from \"./styles\";\r\n\r\n//images\r\nimport information from \"./assets/information.png\";\r\n\r\nconst ChatText = React.forwardRef((props, ref) => {\r\n    useEffect(() => {});\r\n\r\n    return (\r\n        <>\r\n            {props.status === \"invisible\" && (\r\n                <MessageStatus id=\"info-status\">\r\n                    <img src={information} alt=\"image\" />\r\n                    Este contato está offline.\r\n                </MessageStatus>\r\n            )}\r\n            {props.status === \"busy\" && (\r\n                <MessageStatus id=\"info-status\">\r\n                    <img src={information} alt=\"image\" />\r\n                    Este contato está ocupado e pode não responder.\r\n                </MessageStatus>\r\n            )}\r\n            {props.status === \"away\" && (\r\n                <MessageStatus id=\"info-status\">\r\n                    <img src={information} alt=\"image\" />\r\n                    Este contato está ausente e pode não responder.\r\n                </MessageStatus>\r\n            )}\r\n            <Container className=\"div-messages-text\" id={props.socketidperson} ref={ref}>\r\n                {props.children}\r\n            </Container>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default ChatText;\r\n","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\home\\components\\sidebar\\index.js",["251","252","253"],"import React from \"react\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\n//images\r\nimport msnLogo from \"./assets/msn-logo.png\";\r\n\r\n//components\r\nimport AeroButton from \"../../../components/aeroButton/index\";\r\n\r\n//icons\r\nimport { AiFillGithub, AiFillLinkedin, AiOutlineInstagram } from \"react-icons/ai\";\r\n\r\nconst sidebar = () => {\r\n    return (\r\n        <Container>\r\n            <AeroButton className=\"button\">\r\n                <img src={msnLogo} alt=\"\" />\r\n            </AeroButton>\r\n            <AeroButton className=\"button\">\r\n                <a href=\"http://www.github.com/pablobion\" target=\"_blank\">\r\n                    <AiFillGithub size=\"30\" />\r\n                </a>\r\n            </AeroButton>\r\n            <AeroButton className=\"button\">\r\n                <a href=\"http://www.linkedin.com/in/pablobion\" target=\"_blank\">\r\n                    <AiFillLinkedin size=\"30\" color=\"#0e76a8\" />\r\n                </a>\r\n            </AeroButton>\r\n            <AeroButton className=\"button\">\r\n                <a href=\"http://www.instagram.com/pablobion\" target=\"_blank\">\r\n                    <AiOutlineInstagram size=\"30\" color=\"#E1306C\" />\r\n                </a>\r\n            </AeroButton>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default sidebar;\r\n","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\home\\components\\contacts\\index.js",["254","255"],"import React from \"react\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\n//icons and images\r\nimport { BiSearch } from \"react-icons/bi\";\r\nimport addcontact from \"./assets/add-contact.png\";\r\nimport sortContacts from \"./assets/sort-contacts.png\";\r\n\r\n//components\r\nimport AeroButton from \"../../../components/aeroButton/index\";\r\nimport Contact from \"./components/contact/index\";\r\n\r\n//context\r\nimport { useUser } from \"../../../context/allusers\";\r\nimport { socket } from \"../../../../configs/socket_export\";\r\n\r\nconst Contacts = () => {\r\n    const { contactsOnline, countContactsOnline, language } = useUser();\r\n\r\n    return (\r\n        <Container>\r\n            <div id=\"search-contacts\">\r\n                <input type=\"text\"></input>\r\n                <AeroButton className=\"button\" disabled={true}>\r\n                    <BiSearch color=\"gray\" />\r\n                </AeroButton>\r\n                <AeroButton className=\"button\" disabled={true}>\r\n                    <img src={addcontact} alt=\"\" />\r\n                </AeroButton>\r\n                <AeroButton className=\"button\" disabled={true}>\r\n                    <img src={sortContacts} alt=\"\" />\r\n                </AeroButton>\r\n            </div>\r\n            <div id=\"contacts-list\">\r\n                <details className=\"contacts-group-list\">\r\n                    <summary>Online ({countContactsOnline})</summary>\r\n                    <div id=\"contacts-group-list-contacts\">\r\n                        {contactsOnline &&\r\n                            contactsOnline.map((elem) => {\r\n                                if (socket.id == elem.socketid) {\r\n                                    return <Contact username={elem.username} status={elem.status} subnick={elem.subnick} socketid={elem.socketid} key={elem.socketid} music={elem.music} disabled={true} />;\r\n                                }\r\n                                if (elem.status !== \"invisible\") {\r\n                                    return <Contact username={elem.username} status={elem.status} subnick={elem.subnick} socketid={elem.socketid} key={elem.socketid} music={elem.music} disabled={false} />;\r\n                                }\r\n                            })}\r\n                        <small style={{ color: \"darkgray\", height: \"100%\" }}>{language === \"br\" ? \"* Usuários onlines aparecerão nesta lista.\" : \"* Online users will appear in this list.\"}</small>\r\n                    </div>\r\n                </details>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Contacts;\r\n","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\navbar\\styles.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\modalBorder\\styles.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\home\\components\\header\\styles.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\chat\\components\\persons\\styles.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\chat\\components\\chat\\styles.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\chat\\components\\header\\styles.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\chat\\components\\chatText\\styles.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\aeroButton\\index.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\home\\components\\sidebar\\styles.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\home\\components\\contacts\\styles.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\home\\components\\contacts\\components\\contact\\index.js",["256","257","258","259"],"import React from \"react\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\n//images\r\nimport online from \"./assets/online.png\";\r\nimport invisible from \"./assets/invisible.png\";\r\nimport busy from \"./assets/busy.png\";\r\nimport away from \"./assets/away.png\";\r\nimport listen from \"./assets/listen-music.png\";\r\n\r\n//components\r\nimport AeroButton from \"../../../../../components/aeroButton/index\";\r\n\r\n//configs\r\nimport { socket } from \"../../../../../../configs/socket_export\";\r\n\r\n//context\r\nimport { useUser } from \"../../../../../context/allusers\";\r\n\r\nconst Contact = (props) => {\r\n    const { chatRefText, language } = useUser();\r\n\r\n    let status;\r\n    switch (props.status) {\r\n        case \"online\":\r\n            status = online;\r\n            break;\r\n        case \"busy\":\r\n            status = busy;\r\n            break;\r\n        case \"away\":\r\n            status = away;\r\n            break;\r\n        case \"offline\":\r\n            status = invisible;\r\n            break;\r\n        default:\r\n    }\r\n\r\n    const handleCustomClick = (socketidperson) => {\r\n        socket.emit(\"click on chat\", socketidperson);\r\n\r\n        if (chatRefText) {\r\n            const indexPersonChat = chatRefText.current.findIndex((elem) => {\r\n                if (!elem) return false;\r\n                if (elem.id === socketidperson) return socketidperson;\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <AeroButton id=\"button\" onCustomClick={(e) => handleCustomClick(props.socketid)} disabled={props.disabled}>\r\n                <img src={status} alt=\"\" />\r\n                {props.disabled === true && <p>{language === \"br\" ? \"(você)\" : \"(You)\"}</p>}\r\n                {props.username && <p id=\"contact-username\">{props.username}</p>}\r\n                {props.music.name ? (\r\n                    props.music.name ? (\r\n                        <>\r\n                            <a style={{ marginLeft: 5 }}>-</a>\r\n                            <img src={listen} alt=\"\" style={{ marginLeft: 5, width: 15, marginTop: 2 }} />\r\n                            <a id=\"contact-music\" href={props.music.url} target=\"_blank\">\r\n                                {props.music.name} ({props.music.author})\r\n                            </a>\r\n                        </>\r\n                    ) : (\r\n                        <p id=\"contact-subnick\"></p>\r\n                    )\r\n                ) : props.subnick ? (\r\n                    <p id=\"contact-subnick\">- {props.subnick}</p>\r\n                ) : (\r\n                    <p id=\"contact-subnick\"></p>\r\n                )}\r\n            </AeroButton>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Contact;\r\n","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\aeroButton\\styles.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\home\\components\\contacts\\components\\contact\\styles.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\modalCropUpdate\\index.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\modalCropUpdate\\styles.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\modalCropUpdate\\components\\crop\\index.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\modalCropUpdate\\components\\crop\\styles.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\modalCropUpdate\\components\\photoHistory\\index.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\modalCropUpdate\\components\\photoHistory\\styles.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\modalBorder\\verifyAvatarDefault.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\scripts\\refs.js",["260","261"],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\notificationOnline\\styles.js",[],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\pages\\components\\notificationOnline\\index.js",["262","263","264","265","266"],"import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport { Container } from \"./styles\";\r\n\r\nimport NotificationSystem from \"react-notification-system\";\r\n\r\n//components sounds\r\nimport playsound from \"../../../scripts/sounds/sounds\";\r\n\r\n//images\r\nimport msnLogo from \"./assets/msn-logo.png\";\r\n\r\n//icons\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\n\r\n//components\r\nimport ModalBorder from \"../../components/modalBorder/index\";\r\n\r\n//configs\r\nimport { socket, connect } from \"../../../configs/socket_export\";\r\n\r\n//context\r\nimport { useUser } from \"../../context/allusers\";\r\n\r\nconst NotificationOnline = () => {\r\n    const [person, setPerson] = useState();\r\n    const [statusUser, setStatusUser] = useState();\r\n    const notificationSystem = useRef();\r\n    const ButtonnotificationSystem = useRef();\r\n\r\n    const { language } = useUser();\r\n\r\n    const stylemsn = {\r\n        Containers: {\r\n            DefaultStyle: {\r\n                fontFamily: \"inherit\",\r\n                position: \"fixed\",\r\n                width: \"250px\",\r\n                padding: \"0 10px 10px 10px\",\r\n                zIndex: 9998,\r\n                WebkitBoxSizing: \"border-box\",\r\n                MozBoxSizing: \"border-box\",\r\n                boxSizing: \"border-box\",\r\n            },\r\n        },\r\n        NotificationItem: {\r\n            info: {\r\n                // Applied only to the success notification item\r\n                color: \"red\",\r\n            },\r\n            DefaultStyle: {\r\n                position: \"relative\",\r\n                background: \"transparent\",\r\n                width: \"100%\",\r\n                height: \"130px\",\r\n                cursor: \"pointer\",\r\n                borderRadius: \"2px\",\r\n                fontSize: \"13px\",\r\n                margin: \"10px 0 0\",\r\n                padding: \"10px\",\r\n                display: \"block\",\r\n                WebkitBoxSizing: \"border-box\",\r\n                MozBoxSizing: \"border-box\",\r\n                boxSizing: \"border-box\",\r\n                opacity: 0,\r\n                transition: \"0.3s ease-in-out\",\r\n                WebkitTransform: \"translate3d(0, 0, 0)\",\r\n                transform: \"translate3d(0, 0, 0)\",\r\n                willChange: \"transform, opacity\",\r\n\r\n                isHidden: {\r\n                    opacity: 0,\r\n                },\r\n\r\n                isVisible: {\r\n                    opacity: 1,\r\n                },\r\n            },\r\n\r\n            info: {\r\n                borderTop: \"2px solid \" + \"transparent\",\r\n                backgroundColor: \"#e8f0f4\",\r\n                color: \"#41555d\",\r\n                WebkitBoxShadow: \"0 0 1px rgba(\" + (236, 61, 61) + \",\" + 0.9 + \")\",\r\n                MozBoxShadow: \"0 0 1px rgba(\" + (236, 61, 61) + \",\" + 0.9 + \")\",\r\n                boxShadow: \"0 0 1px rgba(\" + (236, 61, 61) + \",\" + 0.9 + \")\",\r\n            },\r\n        },\r\n    };\r\n\r\n    const addNotification = (event) => {\r\n        // event.preventDefault();\r\n        playsound(\"online\");\r\n        notificationSystem.current.addNotification({\r\n            level: \"info\",\r\n            position: \"br\",\r\n            children: (\r\n                <Container>\r\n                    <div id=\"header\">\r\n                        <img src={msnLogo} alt=\"msn logo\" />\r\n                        <p>Windows Live MessengerJS</p>\r\n                        <AiOutlineClose />\r\n                    </div>\r\n                    <div id=\"body\">\r\n                        {person ? <ModalBorder avatar={person.avatar} size=\"32\" minus=\"12\" left=\"4px\" top=\"4px\" /> : <ModalBorder avatar=\"\" size=\"32\" minus=\"12\" left=\"4px\" top=\"4px\" />}\r\n\r\n                        <div id=\"body-username\">\r\n                            <p>{person ? person.username : language === \"br\" ? \"Alguém\" : \"Somebody\"}</p>\r\n                            <p>{language === \"br\" ? \"acabou de entrar.\" : \"has just signed in.\"}</p>\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n            ),\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        socket.on(\"socket connected notification\", (data) => {\r\n            setPerson(data);\r\n            if (ButtonnotificationSystem) {\r\n                if (ButtonnotificationSystem.current) {\r\n                    ButtonnotificationSystem.current.click();\r\n                }\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <NotificationSystem ref={notificationSystem} style={stylemsn} />\r\n            <button id=\"button-add-notification\" onClick={addNotification} style={{ position: \"absolute\", zIndex: \"-3\" }} ref={ButtonnotificationSystem} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport { NotificationOnline };\r\n","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\scripts\\sounds\\sounds.js",["267","268"],"//sounds\r\nimport nudge from \"./assets/nudge.mp3\";\r\nimport online from \"./assets/online.mp3\";\r\nimport type from \"./assets/type.mp3\";\r\n\r\nexport default (param) => {\r\n    let sound;\r\n    switch (param) {\r\n        case \"online\":\r\n            sound = online;\r\n            break;\r\n        case \"nudge\":\r\n            sound = nudge;\r\n            break;\r\n        case \"type\":\r\n            sound = type;\r\n            break;\r\n    }\r\n    let audio = new Audio(sound);\r\n    audio.play();\r\n};\r\n","C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\scripts\\winks\\index.js",["269","270"],"C:\\Users\\Pablo\\Desktop\\msn-js\\frontend\\src\\scripts\\winks\\styles.js",[],{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","replacedBy":"274"},{"ruleId":"275","severity":1,"message":"276","line":1,"column":28,"nodeType":"277","messageId":"278","endLine":1,"endColumn":34},{"ruleId":"275","severity":1,"message":"279","line":23,"column":7,"nodeType":"277","messageId":"278","endLine":23,"endColumn":14},{"ruleId":"280","severity":1,"message":"281","line":36,"column":8,"nodeType":"282","endLine":36,"endColumn":10,"suggestions":"283"},{"ruleId":"280","severity":1,"message":"284","line":20,"column":5,"nodeType":"277","endLine":20,"endColumn":14,"suggestions":"285"},{"ruleId":"286","severity":1,"message":"287","line":74,"column":40,"nodeType":"288","messageId":"289","endLine":74,"endColumn":42},{"ruleId":"286","severity":1,"message":"287","line":78,"column":40,"nodeType":"288","messageId":"289","endLine":78,"endColumn":42},{"ruleId":"280","severity":1,"message":"290","line":124,"column":8,"nodeType":"282","endLine":124,"endColumn":10,"suggestions":"291"},{"ruleId":"292","severity":1,"message":"293","line":136,"column":21,"nodeType":"294","endLine":136,"endColumn":103},{"ruleId":"292","severity":1,"message":"293","line":137,"column":21,"nodeType":"294","endLine":137,"endColumn":100},{"ruleId":"280","severity":1,"message":"295","line":51,"column":8,"nodeType":"282","endLine":51,"endColumn":63,"suggestions":"296"},{"ruleId":"280","severity":1,"message":"297","line":51,"column":9,"nodeType":"298","endLine":51,"endColumn":40},{"ruleId":"280","severity":1,"message":"297","line":51,"column":42,"nodeType":"298","endLine":51,"endColumn":62},{"ruleId":"275","severity":1,"message":"299","line":1,"column":10,"nodeType":"277","messageId":"278","endLine":1,"endColumn":21},{"ruleId":"275","severity":1,"message":"300","line":7,"column":8,"nodeType":"277","messageId":"278","endLine":7,"endColumn":21},{"ruleId":"301","severity":1,"message":"302","line":3,"column":1,"nodeType":"303","endLine":69,"endColumn":3},{"ruleId":"275","severity":1,"message":"304","line":33,"column":37,"nodeType":"277","messageId":"278","endLine":33,"endColumn":38},{"ruleId":"275","severity":1,"message":"305","line":34,"column":37,"nodeType":"277","messageId":"278","endLine":34,"endColumn":38},{"ruleId":"275","severity":1,"message":"306","line":77,"column":15,"nodeType":"277","messageId":"278","endLine":77,"endColumn":20},{"ruleId":"307","severity":1,"message":"308","line":49,"column":78,"nodeType":"309","endLine":49,"endColumn":93},{"ruleId":"310","severity":1,"message":"311","line":66,"column":25,"nodeType":"294","endLine":66,"endColumn":55},{"ruleId":"310","severity":1,"message":"311","line":69,"column":25,"nodeType":"294","endLine":69,"endColumn":55},{"ruleId":"310","severity":1,"message":"311","line":72,"column":25,"nodeType":"294","endLine":72,"endColumn":54},{"ruleId":"310","severity":1,"message":"311","line":75,"column":25,"nodeType":"294","endLine":75,"endColumn":54},{"ruleId":"310","severity":1,"message":"311","line":78,"column":25,"nodeType":"294","endLine":78,"endColumn":54},{"ruleId":"310","severity":1,"message":"311","line":81,"column":25,"nodeType":"294","endLine":81,"endColumn":54},{"ruleId":"310","severity":1,"message":"311","line":14,"column":21,"nodeType":"294","endLine":14,"endColumn":58},{"ruleId":"310","severity":1,"message":"311","line":20,"column":21,"nodeType":"294","endLine":20,"endColumn":58},{"ruleId":"310","severity":1,"message":"311","line":26,"column":21,"nodeType":"294","endLine":26,"endColumn":58},{"ruleId":"307","severity":1,"message":"308","line":21,"column":59,"nodeType":"309","endLine":21,"endColumn":74},{"ruleId":"307","severity":1,"message":"308","line":26,"column":64,"nodeType":"309","endLine":26,"endColumn":79},{"ruleId":"307","severity":1,"message":"308","line":31,"column":62,"nodeType":"309","endLine":31,"endColumn":77},{"ruleId":"312","severity":1,"message":"313","line":40,"column":55,"nodeType":"314","messageId":"315","endLine":40,"endColumn":57},{"ruleId":"286","severity":1,"message":"316","line":41,"column":47,"nodeType":"288","messageId":"289","endLine":41,"endColumn":49},{"ruleId":"275","severity":1,"message":"317","line":45,"column":19,"nodeType":"277","messageId":"278","endLine":45,"endColumn":34},{"ruleId":"312","severity":1,"message":"318","line":45,"column":74,"nodeType":"314","messageId":"315","endLine":45,"endColumn":76},{"ruleId":"319","severity":1,"message":"320","line":61,"column":29,"nodeType":"294","endLine":61,"endColumn":58},{"ruleId":"307","severity":1,"message":"308","line":63,"column":74,"nodeType":"309","endLine":63,"endColumn":89},{"ruleId":"312","severity":1,"message":"318","line":13,"column":66,"nodeType":"314","messageId":"315","endLine":13,"endColumn":68},{"ruleId":"312","severity":1,"message":"318","line":19,"column":64,"nodeType":"314","messageId":"315","endLine":19,"endColumn":66},{"ruleId":"275","severity":1,"message":"321","line":20,"column":18,"nodeType":"277","messageId":"278","endLine":20,"endColumn":25},{"ruleId":"275","severity":1,"message":"322","line":27,"column":12,"nodeType":"277","messageId":"278","endLine":27,"endColumn":22},{"ruleId":"275","severity":1,"message":"323","line":27,"column":24,"nodeType":"277","messageId":"278","endLine":27,"endColumn":37},{"ruleId":"324","severity":1,"message":"325","line":80,"column":13,"nodeType":"326","messageId":"289","endLine":80,"endColumn":17},{"ruleId":"327","severity":1,"message":"328","line":81,"column":41,"nodeType":"288","messageId":"329","endLine":81,"endColumn":42},{"ruleId":"301","severity":1,"message":"302","line":6,"column":1,"nodeType":"303","endLine":21,"endColumn":3},{"ruleId":"330","severity":1,"message":"331","line":8,"column":5,"nodeType":"332","messageId":"333","endLine":18,"endColumn":6},{"ruleId":"275","severity":1,"message":"334","line":1,"column":25,"nodeType":"277","messageId":"278","endLine":1,"endColumn":33},{"ruleId":"330","severity":1,"message":"331","line":31,"column":5,"nodeType":"332","messageId":"333","endLine":38,"endColumn":6},"no-native-reassign",["335"],"no-negated-in-lhs",["336"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'configs' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'chatRef', 'chatRefText', and 'multiChatRef'. Either include them or remove the dependency array.","ArrayExpression",["337"],"React Hook useEffect contains a call to 'setContact'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [getPerson, props.socketidperson, contact] as a second argument to the useEffect Hook.",["338"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'changeLanguage'. Either include it or remove the dependency array.",["339"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'getPerson', 'person', 'props.chatRefText', and 'props.socketidperson'. Either include them or remove the dependency array. If 'setPerson' needs the current value of 'props.socketidperson', you can also switch to useReducer instead of useState and read 'props.socketidperson' in the reducer.",["340"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'BiBluetooth' is defined but never used.","'avatarDefault' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'x' is assigned a value but never used.","'y' is assigned a value but never used.","'child' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '===' and instead saw '=='.","'indexPersonChat' is assigned a value but never used.","Array.prototype.findIndex() expects a value to be returned at the end of arrow function.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'connect' is defined but never used.","'statusUser' is assigned a value but never used.","'setStatusUser' is assigned a value but never used.","no-dupe-keys","Duplicate key 'info'.","ObjectExpression","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},"Update the dependencies array to be: [chatRef, chatRefText, multiChatRef]",{"range":"349","text":"350"},"Add dependencies array: [getPerson, props.socketidperson, contact]",{"range":"351","text":"352"},"Update the dependencies array to be: [changeLanguage]",{"range":"353","text":"354"},"Update the dependencies array to be: [getPerson, person, props.chatRefText, props.socketidperson]",{"range":"355","text":"356"},[1305,1307],"[chatRef, chatRefText, multiChatRef]",[669,669],", [getPerson, props.socketidperson, contact]",[4679,4681],"[changeLanguage]",[1641,1696],"[getPerson, person, props.chatRefText, props.socketidperson]"]